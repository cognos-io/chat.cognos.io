name: chat-cognos-io

services:
  web:
    build: ./web
    restart: unless-stopped
    environment:
      CADDY_ADMIN: "0.0.0.0:2019" # Enable Caddy admin API to listen on all interfaces
    env_file:
      - ./web/.env
    cap_add:
      - NET_ADMIN
    networks:
      - backend
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "2019:2019" # Used for Caddy admin API
    volumes:
      - ./web/Caddyfile:/etc/caddy/Caddyfile
      - web-data:/data
      - web-config:/config

  backend:
    image: docker.io/cognosio/api.cognos.io:latest
    restart: unless-stopped
    user: "1001:0"
    networks:
      - backend
    ports:
      - "8090:8090" # Used for localhost metrics
      - "8090:8090/udp" # Used for localhost metrics
    volumes:
      - db-data:/home/appuser/pb_data
      - ./backend/configs/api.production.yaml:/home/appuser/configs/api.production.yaml:ro

  backup:
    image: ghcr.io/borgmatic-collective/borgmatic
    restart: unless-stopped
    networks:
      - bricksllm
    env_file:
      - ./backup/.env
    volumes:
      - web-data:/source/caddy-data:ro # Caddy data
      - web-config:/source/caddy-config:ro # Caddy configuration
      - db-data:/cognos-db # Pocketbase SQLite database
      - redis:/source/redis:ro # Redis data
      - ./backup/borgmatic.d:/etc/borgmatic.d:ro # Borgmatic configuration
      - /home/cognos/.ssh:/root/.ssh:ro # SSH keys for BorgBase
    depends_on:
      - postgresql

  # BricksLLM setup
  # https://github.com/bricks-cloud/BricksLLM-Docker/blob/main/docker-compose.yml
  redis:
    image: bitnami/redis:7.0
    networks:
      - bricksllm
    restart: always
    env_file:
      - ./bricksllm/.env.redis
    command: /opt/bitnami/scripts/redis/run.sh --save 20 1 --loglevel warning --maxmemory 256mb
    volumes:
      - redis:/bitnami/redis/data

  postgresql:
    image: bitnami/postgresql:16
    networks:
      - bricksllm
    restart: always
    env_file:
      - ./bricksllm/.env.postgresql
    volumes:
      - postgresql:/bitnami/postgresql
      - ./bricksllm/postgresql/initdb.d:/docker-entrypoint-initdb.d

  bricksllm:
    depends_on:
      - redis
      - postgresql
    image: luyuanxin1995/bricksllm:1
    networks:
      - backend
      - bricksllm
    restart: on-failure
    env_file:
      - ./bricksllm/.env.bricksllm
    environment:
      - POSTGRESQL_HOSTS=postgresql
      - REDIS_HOSTS=redis
    ports:
      - "8001:8001"
    command:
      - "-p=strict"
      - "-m=production"

volumes:
  # Stores Caddy TLS certificates and other data
  # https://caddyserver.com/docs/conventions#data-directory
  web-data:
  web-config:
  db-data:
  redis:
  postgresql:

networks:
  backend:
  bricksllm:
